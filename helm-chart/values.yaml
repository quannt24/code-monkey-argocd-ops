# Values file for argo/argo-cd chart
# https://argoproj.github.io/argo-helm

# global:
#   domain: argocd.localhost

argo-cd:
  configs:
    params:
      # TLS terminates at IngressController
      server.insecure: true
    # ssh:
    #   extraHosts: |
    #     # gitlab.com:22 SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.12
    cm:
      create: true
      # Additional account are created in environment specific values file
      # Add an additional local user with apiKey and login capabilities
      #   apiKey - allows generating API keys
      #   login - allows to login using UI
      #accounts.<account_name>: apiKey, login
    rbac:
      # Disable rbac creation here. Create rbac resources in apps-app for streamlined updates.
      create: false

  server:
    ingress:
      enabled: true
      ingressClassName: cilium
      annotations:
        ingress.cilium.io/force-https: "disabled"
        # https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#kubernetesingress-nginx

        # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        # Note that the nginx.ingress.kubernetes.io/ssl-passthrough annotation requires that
        # the --enable-ssl-passthrough flag be added to the command line arguments to
        # nginx-ingress-controller.
        # nginx.ingress.kubernetes.io/ssl-passthrough: "true"

        # If you encounter a redirect loop or are getting a 307 response code
        # then you need to force the nginx ingress to connect to the backend using HTTPS.
        # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

        # https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-ssl-termination-at-ingress-controller
        # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      tls: false
    certificate:
      enabled: false
      # rootca-cluster-issuer is deployed by common-app
      # The certificate will not be available until the issuer is ready
      # If immediate access is needed, comment out this issuer config
      issuer:
        kind: ClusterIssuer
        name: rootca-cluster-issuer

    # If TLS is terminated by IngressController, need to add ingress for gRPC
    ingressGrpc:
      enabled: true
      ingressClassName: cilium
      annotations:
        ingress.cilium.io/force-https: "disabled"
      tls: false

  # https://github.com/jkroepke/helm-secrets/wiki/ArgoCD-Integration#option-1-custom-docker-image
  repoServer:
    image:
      repository: "ghcr.io/daosourced/argocd-repo-server"
      tag: "v3.0.0-20250516"
    env:
      # - name: HELM_SECRETS_LOAD_GPG_KEYS # For GPG
      #   # Multiple keys can be separated by space
      #   value: /helm-secrets-private-keys/key.asc
      - name: SOPS_AGE_KEY_FILE # For age
        value: /helm-secrets-private-keys/keys.txt
    volumes:
      # kubectl create secret generic helm-secrets-private-keys --from-file=key.asc=assets/gpg/private2.gpg
      - name: helm-secrets-private-keys
        secret:
          secretName: helm-secrets-private-keys
    volumeMounts:
      - mountPath: /helm-secrets-private-keys/
        name: helm-secrets-private-keys

appsApp:
  enabled: false
  # Environent specific parameters
  # env: local
  # repoURL: git@github.com:quannt24/code-monkey-apps-ops.git
  # targetRevision: trunk
  # path: helm-chart
